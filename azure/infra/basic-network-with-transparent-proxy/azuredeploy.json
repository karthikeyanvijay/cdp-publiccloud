{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "apiProfile":"2019-03-01-hybrid",
  "parameters": {
    "namePrefix": {
      "type": "string",
      "defaultValue": "cdp",
      "metadata": {
        "description": "Prefix for all resource names"
      }
    },
    "AllowIPAddress": {
      "type": "string",
      "defaultValue": "0.0.0.0/0",
      "metadata": {
        "description": "IP CIDR to allow connections to public subnet"
      }
    },
    "deployVMinPrivateSubnet": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Create a server in the private subnet"
      }
    },
    "resourceTags": {
        "type": "object",
        "defaultValue": {
            "Owner": "Vijay Anand Karthikeyan",
            "Project": "CDP"
        }
    },
    "vmAdminPassword": {
      "type": "string",
      "defaultValue": "DefaultPassW0rd$",
      "metadata": {
        "description": "Admin password for VMs"
      }
    },
    "setupSquidScript": {
      "type": "string",
      "defaultValue": "http://url/setup_squid.sh",
      "metadata": {
        "description": "URL/Path for the Squid setup script"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.10.0.0/16",
      "metadata": {
        "description": "Address prefix"
      }
    },
    "subnet1Prefix": {
      "type": "string",
      "defaultValue": "10.10.11.0/24",
      "metadata": {
        "description": "Subnet 1 Prefix"
      }
    },
    "subnet2Prefix": {
      "type": "string",
      "defaultValue": "10.10.12.0/24",
      "metadata": {
        "description": "Subnet 2 Prefix"
      }
    },
    "subnet3Prefix": {
      "type": "string",
      "defaultValue": "10.10.13.0/24",
      "metadata": {
        "description": "Subnet 2 Prefix"
      }
    },
    "subnet4Prefix": {
      "type": "string",
      "defaultValue": "10.10.21.0/24",
      "metadata": {
        "description": "Subnet 4 Prefix"
      }
    },
    "subnet5Prefix": {
      "type": "string",
      "defaultValue": "10.10.22.0/24",
      "metadata": {
        "description": "Subnet 5 Prefix"
      }
    },
    "subnet6Prefix": {
      "type": "string",
      "defaultValue": "10.10.23.0/24",
      "metadata": {
        "description": "Subnet 6 Prefix"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "vnetName": "[concat(parameters('namePrefix'), '-vnet')]",
    "subnet1Name": "[concat(parameters('namePrefix'), '-pub-', 'subnet1')]",
    "subnet2Name": "[concat(parameters('namePrefix'), '-pub-', 'subnet2')]",
    "subnet3Name": "[concat(parameters('namePrefix'), '-pub-', 'subnet3')]",
    "subnet4Name": "[concat(parameters('namePrefix'), '-prv-', 'subnet4')]",
    "subnet5Name": "[concat(parameters('namePrefix'), '-prv-', 'subnet5')]",
    "subnet6Name": "[concat(parameters('namePrefix'), '-prv-', 'subnet6')]",
    "publicNSGName": "[concat(parameters('namePrefix'), '-nsg-', 'pub')]",
    "privateNSGName": "[concat(parameters('namePrefix'), '-nsg-', 'prv')]",
    "allowAllNSGName": "[concat(parameters('namePrefix'), '-nsg-', 'allow-all')]",
    "publicRouteTableName": "[concat(parameters('namePrefix'), '-routetbl-pub')]",
    "privateRouteTableName": "[concat(parameters('namePrefix'), '-routetbl-prv')]",
    "server4NICName": "[concat(parameters('namePrefix'), '-nic-server4')]",
    "squidNICName": "[concat(parameters('namePrefix'), '-nic-squid')]",
    "squidVMName": "[concat(parameters('namePrefix'), '-vm-squid')]",
    "squidpublicIpAddressName": "[concat(parameters('namePrefix'), '-pubip-squid')]",
    "server4VMName": "[concat(parameters('namePrefix'), '-vm-server4')]",
    "commonManagedIdentityName": "[concat(parameters('namePrefix'), '-mi-common')]",
    "vmSize": "Standard_B2s",
    "vmOsDiskType": "Premium_LRS",
    "adminUsername": "azureuser",
    "adminPassword": "[parameters('vmAdminPassword')]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnetName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('publicNSGName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('privateNSGName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('allowAllNSGName'))]",
        "[resourceId('Microsoft.Network/routeTables', variables('publicRouteTableName'))]",
        "[resourceId('Microsoft.Network/routeTables', variables('privateRouteTableName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        }
      },
      "resources": [
        {
          "type": "subnets",
          "location": "[parameters('location')]",
          "name": "[variables('subnet1Name')]",
          "dependsOn": [
            "[variables('vnetName')]"
          ],
          "properties": {
            "addressPrefix": "[parameters('subnet1Prefix')]",
            "routeTable": {
              "id": "[resourceId('Microsoft.Network/routeTables', variables('publicRouteTableName'))]"
            },
            "networkSecurityGroup": {
              "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('publicNSGName'))]"
            }
          }
        },
        {
          "type": "subnets",
          "location": "[parameters('location')]",
          "name": "[variables('subnet2Name')]",
          "dependsOn": [
            "[variables('vnetName')]",
            "[variables('subnet1Name')]"
          ],
          "properties": {
            "addressPrefix": "[parameters('subnet2Prefix')]",
            "routeTable": {
              "id": "[resourceId('Microsoft.Network/routeTables', variables('publicRouteTableName'))]"
            },
            "networkSecurityGroup": {
              "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('publicNSGName'))]"
            }
          }
        },
        {
          "type": "subnets",
          "location": "[parameters('location')]",
          "name": "[variables('subnet3Name')]",
          "dependsOn": [
            "[variables('vnetName')]",
            "[variables('subnet2Name')]"
          ],
          "properties": {
            "addressPrefix": "[parameters('subnet3Prefix')]",
            "routeTable": {
              "id": "[resourceId('Microsoft.Network/routeTables', variables('publicRouteTableName'))]"
            },
            "networkSecurityGroup": {
              "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('publicNSGName'))]"
            }
          }
        },
        {
          "type": "subnets",
          "location": "[parameters('location')]",
          "name": "[variables('subnet4Name')]",
          "dependsOn": [
            "[variables('vnetName')]",
            "[variables('subnet3Name')]"
          ],
          "properties": {
            "addressPrefix": "[parameters('subnet4Prefix')]",
            "serviceEndpoints": [
              {
                "service": "Microsoft.Storage"
              },
              {
                "service": "Microsoft.Sql"
              }
            ],
            "routeTable": {
              "id": "[resourceId('Microsoft.Network/routeTables', variables('privateRouteTableName'))]"
            },
            "networkSecurityGroup": {
              "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('privateNSGName'))]"
            }
          }
        },
        {
          "type": "subnets",
          "location": "[parameters('location')]",
          "name": "[variables('subnet5Name')]",
          "dependsOn": [
            "[variables('vnetName')]",
            "[variables('subnet4Name')]"
          ],
          "properties": {
            "addressPrefix": "[parameters('subnet5Prefix')]",
            "serviceEndpoints": [
              {
                "service": "Microsoft.Storage"
              },
              {
                "service": "Microsoft.Sql"
              }
            ],
            "routeTable": {
              "id": "[resourceId('Microsoft.Network/routeTables', variables('privateRouteTableName'))]"
            },
            "networkSecurityGroup": {
              "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('privateNSGName'))]"
            }
          }
        },
        {
          "type": "subnets",
          "location": "[parameters('location')]",
          "name": "[variables('subnet6Name')]",
          "dependsOn": [
            "[variables('vnetName')]",
            "[variables('subnet5Name')]"
          ],
          "properties": {
            "addressPrefix": "[parameters('subnet6Prefix')]",
            "serviceEndpoints": [
              {
                "service": "Microsoft.Storage"
              },
              {
                "service": "Microsoft.Sql"
              }
            ],
            "routeTable": {
              "id": "[resourceId('Microsoft.Network/routeTables', variables('privateRouteTableName'))]"
            },
            "networkSecurityGroup": {
              "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('privateNSGName'))]"
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "name": "[variables('commonManagedIdentityName')]",
      "apiVersion": "2018-11-30",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]"
    },
    {
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('publicRouteTableName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "routes": [
        ]
      }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('privateRouteTableName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "routes": [
            {
              "name": "route-internet",
              "properties": {
                "addressPrefix": "0.0.0.0/0",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "10.10.11.4"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-08-01",
      "name": "[variables('privateNSGName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "securityRules": [
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-08-01",
      "name": "[variables('publicNSGName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "securityRules": [
          {
            "name": "allow-all-inbound-for-ip",
            "properties": {
              "priority": 1000,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "*",
              "protocol": "*",
              "sourceAddressPrefix": "[parameters('AllowIPAddress')]",
              "sourcePortRange": "1024-65535",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "allow-all-inbound-vnet",
            "properties": {
              "priority": 1001,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "*",
              "protocol": "*",
              "sourceAddressPrefix": "[parameters('vnetAddressPrefix')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-08-01",
      "name": "[variables('allowAllNSGName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "securityRules": [
          {
            "name": "allow-all",
            "properties": {
              "priority": 1000,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "*",
              "protocol": "*",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "1024-65535",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "allow-all-inbound-vnet",
            "properties": {
              "priority": 1001,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "*",
              "protocol": "*",
              "sourceAddressPrefix": "[parameters('vnetAddressPrefix')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "condition": "[parameters('deployVMinPrivateSubnet')]",
      "apiVersion": "2018-10-01",
      "name": "[variables('server4NICName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "dependsOn": [
        "[variables('subnet4Name')]"
      ],
      "properties": {
          "ipConfigurations": [
              {
                  "name": "server4-ipconfig-1",
                  "properties": {
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnet4Name'))]"
                      },
                      "privateIPAllocationMethod": "Dynamic"
                  }
              }
          ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "condition": "[parameters('deployVMinPrivateSubnet')]",
      "apiVersion": "2020-12-01",
      "name": "[variables('server4VMName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "dependsOn": [
          "[concat('Microsoft.Network/networkInterfaces/', variables('server4NICName'))]"
      ],
      "properties": {
          "hardwareProfile": {
              "vmSize": "[variables('vmSize')]"
          },
          "storageProfile": {
              "osDisk": {
                  "createOption": "FromImage",
                  "managedDisk": {
                      "storageAccountType": "[variables('vmOsDiskType')]"
                  }
              },
              "imageReference": {
                  "publisher": "RedHat",
                  "offer": "RHEL",
                  "sku": "7.8",
                  "version": "latest"
              }
          },
          "networkProfile": {
              "networkInterfaces": [
                  {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('server4NICName'))]"
                  }
              ]
          },
          "osProfile": {
              "computerName": "server4",
              "adminUsername": "[variables('adminUsername')]",
              "adminPassword": "[variables('adminPassword')]",
              "linuxConfiguration": {
                  "patchSettings": {
                      "patchMode": "ImageDefault"
                  }
              }
          }
      }
    },
    {
      "type": "Microsoft.Network/publicIpAddresses",
      "name": "[variables('squidpublicIpAddressName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "sku": {
          "name": "Basic"
      },
      "properties": {
          "publicIpAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-10-01",
      "name": "[variables('squidNICName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "dependsOn": [
        "[variables('subnet1Name')]",
        "[variables('squidpublicIpAddressName')]"
      ],
      "properties": {
          "ipConfigurations": [
              {
                  "name": "squid-ipconfig-1",
                  "properties": {
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnet1Name'))]"
                      },
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIpAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('squidpublicIpAddressName'))]"
                    }
                  }
              }
          ],
          "enableIPForwarding": true
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-12-01",
      "name": "[variables('squidVMName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "identity": {
          "type": "userAssigned",
          "userAssignedIdentities": {
              "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/',variables('commonManagedIdentityName'))]": {}
          }
      },
      "dependsOn": [
          "[concat('Microsoft.Network/networkInterfaces/', variables('squidNICName'))]",
           "[concat('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('commonManagedIdentityName'))]"
      ],
      "properties": {
          "hardwareProfile": {
              "vmSize": "[variables('vmSize')]"
          },
          "storageProfile": {
              "osDisk": {
                  "createOption": "FromImage",
                  "managedDisk": {
                      "storageAccountType": "[variables('vmOsDiskType')]"
                  }
              },
              "imageReference": {
                  "publisher": "OpenLogic",
                  "offer": "CentOS",
                  "sku": "7-CI",
                  "version": "latest"
              }
          },
          "networkProfile": {
              "networkInterfaces": [
                  {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('squidNICName'))]"
                  }
              ]
          },
          "osProfile": {
              "computerName": "squid",
              "adminUsername": "[variables('adminUsername')]",
              "adminPassword": "[variables('adminPassword')]",
              "linuxConfiguration": {
                  "patchSettings": {
                      "patchMode": "ImageDefault"
                  }
              }
          }
      },
      "resources":[
        {
          "name": "[concat(variables('squidVMName'),'/CustomScript')]",
          "type": "Microsoft.HybridCompute/machines/extensions",
          "location": "[parameters('location')]",
          "tags": "[parameters('resourceTags')]",
          "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/', variables('squidVMName'))]"
          ],
          "apiVersion": "2019-08-02-preview",
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "autoUpgradeMinorVersion": true,
            "settings": {
                "fileUris": [
                "[parameters('setupSquidScript')]"
              ],
              "commandToExecute": "sh setup_squid.sh"
            },
            "protectedSettings": {
            }
          }
        }
      ]
    }
  ]
}
